
# the color range from 1 - 15 for black background color
# we also can change the input text color, I never try that, but I think
# it should be get_std_handle.call(-10) or -12....forgot already

#-----------------------------------------------------------------------

if RUBY_PLATFORM =~/(win|w)32$/
	begin
		require 'Win32API'
	rescue LoadError
		puts "ERROR! \"Win32API\" library not found"
		puts "\"Win32API\" is required for colour on a windows machine"
		puts"  try => \"gem install Win32API\" on the command line"
		puts
		exit 1
	end
	puts
  puts 'Windows Environment Detected...'
	puts 'Win32API Library Found.'
	puts
end

class ColourCommandLine
  
  #   #   #   #   
  
  def initialize
    get_std_handle = Win32API.new("kernel32", "GetStdHandle", ['L'], 'L')
    @set_console_txt_attrb =
     Win32API.new("kernel32","SetConsoleTextAttribute",
                            ['L','N'], 'I')
    @hout = get_std_handle.call(-11)
  end
  
  #   #   #   #   
  
  def change_to(new_colour)
    @set_console_txt_attrb.call(@hout,self.colour(new_colour))
  end
  
  #   #   #   #   
  
  def colour(colour)
    case colour
      when :black then 0  
      when :dark_blue then 1
      when :dark_green then 2
      when :dark_cyan then 3
      when :dark_red then 4
      when :dark_purple then 5
      when :dark_yellow then 6
      when :default_white, :default, :dark_white, :grey then 7
      when :silver then 8
      when :blue then 9
      when :green then 10
      when :cyan then 11
      when :red then 12
      when :purple then 13
      when :yellow then 14
      when :white then 15
      else
        colour
    end
  end
  def puts_c(colour, str)
    change_to(colour)
    puts str
    change_to(:default_white)
  end
  def print_c(colour, str)
    change_to(colour)
    print str
    change_to(:default_white)
  end
end  

  def colour_write(type, role, str)
    @colour = ColourCommandLine.new
    case role
    when :narrative
      clr = :dark_yellow 
    when :output
      clr = :dark_cyan
    when :success
      clr = :green
    when :failure
      clr = :red
    else
      clr = role
    end
    type == :puts ? @colour.puts_c(clr, str): @colour.print_c(clr, str)
    @colour = nil
  end
  
  def colour_puts(role,str)
    colour_write(:puts,role,str)
  end
  
  def colour_print(role,str)
    colour_write(:print,role,str)
  end


#   #   #   #   

#################################################################################################################################
# @colour = ColourCommandLine.new      # instantiate colour class                                                               #
#                                                                                                                               #
# def print_time                                                                                                                #
#   @colour.change_to :yellow                                                                                                   #
#   puts Time.now                                                                                                               #
# end                                                                                                                           #
#                                                                                                                               #
# def success_out msg                                                                                                           #
#   print_time                                                                                                                  #
#   @colour.change_to :green                                                                                                    #
#   puts "  #{msg}"                                                                                                             #
#   puts                                                                                                                        #
# end                                                                                                                           #
# def failure_out msg                                                                                                           #
#   print_time                                                                                                                  #
#   @colour.change_to :red                                                                                                      #
#   puts "  #{msg}"                                                                                                             #
#   puts                                                                                                                        #
# end                                                                                                                           #
# def info_out msg                                                                                                              #
#   print_time                                                                                                                  #
#   @colour.change_to :grey                                                                                                     #
#   puts "  #{msg}"                                                                                                             #
#   puts                                                                                                                        #
# end                                                                                                                           #
#                                                                                                                               #
# colour = Colour_command_line.new      # instantiate colour class                                                              #
#                                                                                                                               #
# 20.times do                                                                                                                   #
#   @colour.change_to :green                                                                                                    #
#   msg = "SUCCESS:\n  Expected this to happen\n  System Alarm ABCDE_FERTY received as expected"                                #
#   success_out msg                                                                                                             #
#   msg = "FAILURE:\n  Expected different!\n  Expected System Alarm ABCDE_FERTY but received QWERT_YUIOP\n  Unexpected result!" #
#   failure_out msg                                                                                                             #
# end                                                                                                                           #
#   info_out "Back to normal!"                                                                                                  #
#                                                                                                                               #
# colour.change_to :default                                                                                                     #
# colour = nil                                                                                                                  #
#                                                                                                                               #
# #   #   #   #                                                                                                                 #
#                                                                                                                               #
# #~ 0.upto(15) do |colour_index|                                                                                               #
#   #~ set_console_txt_attrb.call(@hout,colour_index)                                                                           #
#   #~ puts "colour for value #{colour_index}"                                                                                  #
# #~ end                                                                                                                        #
#   #~ set_console_txt_attrb.call(@hout,7)                                                                                      #
# #~ puts 'command prompt default colour text'                                                                                  #
#################################################################################################################################


