
#    #    #    #    #    #    #    #    source   #    #    #    #    #    #    #    #    

require File.expand_path(File.join(File.dirname(__FILE__),'colour_command_line'))
require File.expand_path(File.join(File.dirname(__FILE__),'log'))
require File.expand_path(File.join(File.dirname(__FILE__),'zip_logs'))
require File.expand_path(File.join(File.dirname(__FILE__),'timers'))
require File.expand_path(File.join(File.dirname(__FILE__),'serial_comms'))

class StateMachine
  
  attr_accessor :state, :messages

  def initialize
    STDOUT.puts
    STDOUT.puts "Initialising..."
    STDOUT.puts
    STDOUT.flush
		@mode =  :on # :continuous # :one_shot# 
    @colour = ColourCommandLine.new
    @pass_count = 0
    @fail_count = 0
    @no_response_count = 0
    @test_count = 0
		@serial = Serial_Comms.new
		@serial.attach_to_port
		@serial.read_timeout 10
    @state = :init
		@timers = Timers.new
		@timers.add_timer :inquiry_timeout
		@timers.set_timer :inquiry_timeout, 15.0
		@timers.add_timer :send_delay
		@timers.set_timer :send_delay, 1.0
		@timers.add_timer :response_time
		@timers.set_timer :response_time, 2.0
		@timers.add_timer :archive_delay
		@timers.set_timer :archive_delay, 60.0 # check for logs requiring archiving every 1 min
		#~ @messages = Messages.new
    @log = Log.new('blue_giga_log')
    
  end

  def process
		@commands = [
			{
				:send_message => 'resetting device',
				:send_string => 'RESET',
				:receive_message => 'device reset',
				:receive_string => 'READY'
			},{
				:send_message => 'setting bt name',
				:send_string => 'SET BT NAME Mary_Hare_Microphone_Adaptor',
				:receive_message => 'BT name set',
				:receive_string => 'SET BT NAME Mary_Hare_Microphone_Adaptor'
			},{
				:send_message => 'setting bt class to 001f00',
				:send_string => 'SET BT CLASS 001f00',
				:receive_message => 'BT class set',
				:receive_string => 'SET BT CLASS 001f00'
			},{
				:send_message => 'setting BT AUTH',
				:send_string => 'SET BT AUTH * 2.7182818284590',
				:receive_message => 'BT AUTH set',
				:receive_string => 'SET BT AUTH * 2.7182818284590'
			},{
				:send_message => 'setting BT IDENT',
				:send_string => 'SET BT IDENT BT:47 f000 3.1.0 Bluegiga iWRAP',
				:receive_message => 'BT IDENT set',
				:receive_string => 'SET BT IDENT BT:47 f000 3.1.0 Bluegiga iWRAP'
			},{
				:send_message => 'setting BT LAP',
				:send_string => 'SET BT LAP 9e8b33',
				:receive_message => 'BT LAP set',
				:receive_string => 'SET BT LAP 9e8b33'
			},{
				:send_message => 'setting BT PAGEMODE',
				:send_string => 'SET BT PAGEMODE 4 2000 1',
				:receive_message => 'BT PAGEMODE set',
				:receive_string => 'SET BT PAGEMODE 4 2000 1'
			},{
				:send_message => 'setting BT PAIR',
				:send_string => 'SET BT PAIR *',
				:receive_message => 'BT PAIR set',
				:receive_string => 'SET BT PAIR *'
			},{
				:send_message => 'setting BT POWER',
				:send_string => 'SET BT POWER 0 0 0',
				:receive_message => 'BT POWER set',
				:receive_string => 'SET BT POWER 0 0 0'
			},{
				:send_message => 'setting BT ROLE',
				:send_string => 'SET BT ROLE 0 f 7d00',
				:receive_message => 'BT ROLE set',
				:receive_string => 'SET BT ROLE 0 f 7d00'
			},{
				:send_message => 'setting BT SNIFF',
				:send_string => 'SET BT SNIFF 0 20 1 8',
				:receive_message => 'BT SNIFF set',
				:receive_string => 'SET BT SNIFF 0 20 1 8'
			},{
				:send_message => 'setting CONTROL AUDIO',
				:send_string => 'SET CONTROL AUDIO INTERNAL INTERNAL',
				:receive_message => 'CONTROL AUDIO set',
				:receive_string => 'SET CONTROL AUDIO INTERNAL INTERNAL'
			},{
				:send_message => 'setting CONTROL BAUD',
				:send_string => 'SET CONTROL BAUD 115200,8n1',
				:receive_message => 'CONTROL BAUD set',
				:receive_string => 'SET CONTROL BAUD 115200,8n1'
			},{
				:send_message => 'setting SET CONTROL CD',
				:send_string => 'SET CONTROL CD 00 0',
				:receive_message => 'SET CONTROL CD set',
				:receive_string => 'SET CONTROL CD 00 0'
			},{
				:send_message => 'setting secondary CONTROL CODEC',
				:send_string => 'SET CONTROL CODEC SBC JOINT_STEREO 44100Hz 1',
				:receive_message => 'secondary CONTROL CODEC set',
				:receive_string => 'SET CONTROL CODEC SBC JOINT_STEREO 44100Hz 1'
			},{
				:send_message => 'setting primary CONTROL CODEC',
				:send_string => 'SET CONTROL CODEC APT-X JOINT_STEREO 44100Hz 0',
				:receive_message => 'primary CONTROL CODEC set',
				:receive_string => 'SET CONTROL CODEC APT-X JOINT_STEREO 44100Hz 0'
			},{
				:send_message => 'setting CONTROL ECHO',
				:send_string => 'SET CONTROL ECHO 7',
				:receive_message => 'CONTROL ECHO set',
				:receive_string => 'SET CONTROL ECHO 7'
			},{
				:send_message => 'setting CONTROL ESCAPE',
				:send_string => 'SET CONTROL ESCAPE 43 00 1',
				:receive_message => 'CONTROL ESCAPE set',
				:receive_string => 'SET CONTROL ESCAPE 43 00 1'
			},{
				:send_message => 'setting CONTROL GAIN',
				:send_string => 'SET CONTROL GAIN 8 8',
				:receive_message => 'CONTROL GAIN set',
				:receive_string => 'SET CONTROL GAIN 8 8'
			},{
				:send_message => 'setting CONTROL MICBIAS',
				:send_string => 'SET CONTROL MICBIAS b 0',
				:receive_message => 'CONTROL MICBIAS set',
				:receive_string => 'SET CONTROL MICBIAS b 0'
			},{
				:send_message => 'setting CONTROL MSC DTE',
				:send_string => 'SET CONTROL MSC DTE 00 00 00 00 00 00',
				:receive_message => 'CONTROL MSC DTE set',
				:receive_string => 'SET CONTROL MSC DTE 00 00 00 00 00 00'
			},{
				:send_message => 'setting CONTROL PREAMP',
				:send_string => 'SET CONTROL PREAMP 1 1',
				:receive_message => 'CONTROL PREAMP set',
				:receive_string => 'SET CONTROL PREAMP 1 1'
			},{
				:send_message => 'setting CONTROL READY',
				:send_string => 'SET CONTROL READY 00',
				:receive_message => 'CONTROL READY set',
				:receive_string => 'SET CONTROL READY 00'
			},{
				:send_message => 'setting CONTROL VREGEN',
				:send_string => 'SET CONTROL VREGEN 1 00',
				:receive_message => 'CONTROL VREGEN set',
				:receive_string => 'SET CONTROL VREGEN 1 00'
			},{
				:send_message => 'setting PROFILE A2DP SOURCE',
				:send_string => 'SET PROFILE A2DP SOURCE',
				:receive_message => 'PROFILE A2DP SOURCE set',
				:receive_string => 'SET PROFILE A2DP SOURCE'
			},{
				:send_message => 'setting PROFILE SPP off',
				:send_string => 'SET PROFILE SPP off',
				:receive_message => 'PROFILE SPP set',
				:receive_string => 'SET PROFILE SPP off'
			}
		]
			
    loop do
			
      case @state

			when :init
			
				@commands.each do |command|
					@in_string = ''
					puts " ...> #{command[:send_message]}"
					@serial.send_string(command[:send_string])
					loop do
						temp_string = @serial.read_string
						if temp_string  != nil
							@in_string += temp_string 
							#~ puts "returned message is => #{@in_string }"
							if @in_string.include? command[:receive_string]
								puts " <... #{command[:receive_message]}"
								@state = :inquire_base_devices
								break
							end
						end
					end
				end
        
      when :inquire_base_devices
        puts "  ---> inquiring relevant devices..."
        @serial.send_string("INQUIRY 5 NAME LAP 9e8b33")
        @state = :inquire_base_devices_response
        @timers.start_timer :inquiry_timeout
        
      when :inquire_base_devices_response
        if @timers[:inquiry_timeout] == :expired
          puts
          puts "  !! NO DISCOVERABLE DEVICES !!"
          puts
          @state = :init
        else  
          @in_string = @serial.read_string
          if @in_string != nil
            if @in_string.include? 'ENQUIRY 0'
							puts "  !! NO DISCOVERABLE DEVICES !!"
              @state = :reset
            elsif @in_string.include? 'NAME'
              @ma_address = @in_string[@in_string.index('NAME ') + 5 .. @in_string.index('NAME ') + 5 + 16]
              if not  @ma_address[2..2] == ':' and 
                  @ma_address[5..5] == ':' and 
                  @ma_address[8..8] == ':' and 
                  @ma_address[11..11] == ':' and 
                  @ma_address[14..14] == ':'
                @ma_address = nil 
              end  
							if 	@in_string.include? 'NAME' and 
									@in_string.include? 'Mary_Hare_Base_Unit' and 
									@in_string.include? @ma_address
								puts "  <--- found Base Unit"
								puts "  <--- Base Unit address is #{@ma_address}"
								@state = :initiate_pairing
							end
            end
          end
        end
        
      when :initiate_pairing
        puts "  ---> pairing with Base Unit..."
        @serial.send_string("PAIR #{@ma_address}")
        @state = :initiate_pairing_response
        
      when :initiate_pairing_response
        @in_string = @serial.read_string
        if @in_string != nil
          if @in_string.include? "PAIR #{@ma_address} OK"
            puts "  <--- Pairing established"
            @state = :connecting_audio
          end  
        end

      when :connecting_audio
        puts "  ---> Establishing A2DP stream..."
        @serial.send_string("CALL #{@ma_address} 19 A2DP")
        @state = :connecting_audio_response
        
      when :connecting_audio_response
        @in_string = @serial.read_string
        if @in_string != nil
          if not @in_string.include? "A2DP STREAMING START"
          else
            puts "  <--- Audio Streaming established"
						
            @state = :connected_pause
          end  
        end

      when :connected_pause
				if @mode == :continuous
					puts "  ---> Waiting for end of stream..."
					sleep 5
					@state = :close_connection
				end
					
        
      when :close_connection
        puts "  ---> Closing Connection..."
        @serial.send_string("CLOSE 0")
        @state = :close_connection_response
          
      when :close_connection_response
        @in_string = @serial.read_string
        if @in_string != nil
          if not @in_string.include? "A2DP STREAMING STOP"
          else
            puts "  <--- Audio connection closed"
            @state = :remove_pairing 
          end  
        end

      when :remove_pairing
        puts "  ---> removing pairing"
        @serial.send_string("SET BT PAIR *")
        @state = :remove_pairing_response
          
      when :remove_pairing_response
        @in_string = @serial.read_string
        if @in_string != nil
          if @in_string.include? "NO CARRIER 0 ERROR 0"
            puts "  <--- pairing removed"
            sleep 1
            @state = :AT_handshake
          end
        end
         


      else
        puts "ERROR!! Unexpected state in StateMachine#process"
        exit 1
        
      end
    end  
  end  
end

if $0 == __FILE__
  @sm = StateMachine.new
  @sm.process
  @sm = nil
end

#    #    #    #    #    #    #    #    source   #    #    #    #    #    #    #    #    

				############################################################################
                                # :send_string => 'RESET',                                                 #
				# :send_string => 'SET BT NAME Mary_Hare_Microphone_Adaptor',              #
				# :send_string => 'SET BT CLASS 001f00',                                   #
				# :send_string => 'SET BT AUTH * 2.7182818284590',                         #
				# :send_string => 'SET BT IDENT BT:47 f000 3.1.0 Bluegiga iWRAP',          #
				# :send_string => 'SET BT LAP 9e8b33',                                     #
				# :send_string => 'SET BT PAGEMODE 4 2000 1',                              #
				# :send_string => 'SET BT PAIR *',                                         #
				# :send_string => 'SET BT POWER 0 0 0',                                    #
				# :send_string => 'SET BT ROLE 0 f 7d00',                                  #
				# :send_string => 'SET BT SNIFF 0 20 1 8',                                 #
				# :send_string => 'SET CONTROL AUDIO INTERNAL INTERNAL',                   #
				# :send_string => 'SET CONTROL BAUD 115200,8n1',                           #
				# :send_string => 'SET CONTROL CD 00 0',                                   #
				# :send_string => 'SET CONTROL CODEC SBC JOINT_STEREO 44100Hz 1',          #
				# :send_string => 'SET CONTROL CODEC APT-X JOINT_STEREO 44100Hz 0',        #
				# :send_string => 'SET CONTROL ECHO 7',                                    #
				# :send_string => 'SET CONTROL ESCAPE 43 00 1',                            #
				# :send_string => 'SET CONTROL GAIN 8 8',                                  #
				# :send_string => 'SET CONTROL MICBIAS b 0',                               #
				# :send_string => 'SET CONTROL MSC DTE 00 00 00 00 00 00',                 #
				# :send_string => 'SET CONTROL PREAMP 1 1',                                #
				# :send_string => 'SET CONTROL READY 00',                                  #
				# :send_string => 'SET CONTROL VREGEN 1 00',                               #
				# :send_string => 'SET PROFILE A2DP SOURCE',                               #
				# :send_string => 'SET PROFILE SPP off',                                   #
                                #                                                                          #
				# :send_string => 'INQUIRY 5 NAME LAP 9e8b33',                             #
				# :send_string => "PAIR #{@ma_address}",                                   #
				# :send_string => "CALL #{@ma_address} 19 A2DP",                           #
                                ############################################################################
        
 
